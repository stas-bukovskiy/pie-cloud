spring.config.import=file:.env[.properties]
# --- logging ---
logging.level.com.piecloud=ERROR
logging.level.web=ERROR
logging.level.root=ERROR
logging.level.sql=ERROR
# --- actuator ---
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
# --- mongodb ---
spring.data.mongodb.auto-index-creation=true
spring.data.mongodb.uri=mongodb+srv://${MONGO_USER}:${MONGO_PASSWORD}@pie-cloud.fplnq00.mongodb.net/pie-cloud-db?retryWrites=true&w=majority
# --- kafka ---
spring.kafka.bootstrap-servers=localhost:9092
# producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# consumer
spring.kafka.consumer.group-id=piecloud
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# json deserializer config
spring.kafka.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.piecloud.order.OrderDto
# topic
ORDER_DTO_TOPIC=order
# image-upload
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB